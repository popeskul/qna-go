basePath: /
definitions:
  domain.SignInInput:
    properties:
      email:
        maxLength: 255
        minLength: 3
        type: string
      password:
        maxLength: 255
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  domain.SignUpInput:
    properties:
      email:
        maxLength: 255
        minLength: 3
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
      password:
        maxLength: 255
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  domain.Test:
    properties:
      author_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  domain.TestInput:
    properties:
      title:
        maxLength: 255
        minLength: 3
        type: string
    required:
    - title
    type: object
  v1.SignInResponse:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  v1.SignUpResponse:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  v1.errorResponse:
    properties:
      message:
        type: string
    type: object
  v1.getTestByIDResponse:
    properties:
      status:
        type: string
      test:
        $ref: '#/definitions/domain.Test'
    type: object
  v1.statusResponse:
    properties:
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Qna API
  title: Qna API
  version: "1.0"
paths:
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in user
      operationId: sign-in
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: Sign in
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Sign up a new user
      operationId: sign-up
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: Sign up
      tags:
      - auth
  /tests:
    post:
      consumes:
      - application/json
      description: Create test
      operationId: create-test
      parameters:
      - description: test
        in: body
        name: test
        required: true
        schema:
          $ref: '#/definitions/domain.TestInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Test'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create test
      tags:
      - tests
  /tests/{id}:
    delete:
      consumes:
      - application/json
      description: Delete test by id
      operationId: delete-test-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete test by id
      tags:
      - tests
    get:
      consumes:
      - application/json
      description: Get test by id
      operationId: get-test-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.getTestByIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get test by id
      tags:
      - tests
    put:
      consumes:
      - application/json
      description: Update test by id
      operationId: update-test-by-id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: test
        in: body
        name: test
        required: true
        schema:
          $ref: '#/definitions/domain.TestInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.statusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update test by id
      tags:
      - tests
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
